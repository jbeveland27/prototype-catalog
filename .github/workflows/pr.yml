name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Dump all contexts
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      # Checkout base repo
      #- name: Checkout
      #  uses: actions/checkout@v2

      # List contents of repo
      - name: List directory
        run: ls -la

      # This would checkout all the submodules, even though we only need the one for _this_ PR
#      - name: Checkout submodules
#        uses: srt32/git-actions@v0.0.3
#        with:
#          args: git submodule update --init --recursive
      
      # Checkout PR branch and all history (not just last commit)
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      
      # Git Log
      - name: Git Log
        run: git log
        
      # Checkout submodules, without --depth=1  
      - name: Checkout submodules
        shell: bash
        run: |
          # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
          git config --global url."https://github.com/".insteadOf "git@github.com:"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive
      
      # List contents of repo
      - name: List directory
        run: ls -la

      # This would checkout submodule `foo` (if we can get foo...)
      #- uses: Mushus/checkout-submodule@v1
      #  with:
      #    submodulePath: ./foo
      
      # Git Status
      - name: Git Status
        run: git status
        
      # Git Log
      - name: Git Log
        run: git log
      
      # Git Diffs
      - name: Git Diff
        run: |
          git diff --submodule=log --diff-filter=AM ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }}
          echo ::set-env name=SUBMODULE_NAME::$(git diff --submodule=log --diff-filter=AM ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | awk '{for (I=1;I<=NF;I++) if ($I == "Submodule") {print $(I+1)};}')
          
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
        
      - name: Check SUBMODULE_NAME
        run: echo ${{ env.SUBMODULE_NAME }}
#       # Dump all contexts again
#       - name: Dump GitHub context
#         env:
#           GITHUB_CONTEXT: ${{ toJson(github) }}
#         run: echo "$GITHUB_CONTEXT"
#       - name: Dump job context
#         env:
#           JOB_CONTEXT: ${{ toJson(job) }}
#         run: echo "$JOB_CONTEXT"
#       - name: Dump steps context
#         env:
#           STEPS_CONTEXT: ${{ toJson(steps) }}
#         run: echo "$STEPS_CONTEXT"
#       - name: Dump runner context
#         env:
#           RUNNER_CONTEXT: ${{ toJson(runner) }}
#         run: echo "$RUNNER_CONTEXT"
#       - name: Dump strategy context
#         env:
#           STRATEGY_CONTEXT: ${{ toJson(strategy) }}
#         run: echo "$STRATEGY_CONTEXT"
#       - name: Dump matrix context
#         env:
#           MATRIX_CONTEXT: ${{ toJson(matrix) }}
#         run: echo "$MATRIX_CONTEXT"
    
      - name: cd
        run: |
          pwd
          cd ${{ env.SUBMODULE_NAME }}
          ls -la
          pwd

#       - name: files-present-action
#         uses: JJ/files-present-action@releases/v1
#         with:
#           # Array describing the files
#           files: "README.md, .prettierrc.js, .eslintrc.js, .gitignore, package.json, LICENSE, THIRD_PARTY_NOTICES.md, CODE_OF_CONDUCT.md, cla.md, .github/ISSUE_TEMPLATE/bug_report.md, .github/ISSUE_TEMPLATE/enhancement.md, nr1.json, catalog/config.json"

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: Install Dependencies
        working-directory: ./${{ SUBMODULE_NAME }}
        run: npm install

      - name: Install NR1 CLI
        run: curl -s https://cli.nr-ext.net/installer.sh | sudo bash

      - name: NR1 Nerdpack Build
        working-directory: ./${{ SUBMODULE_NAME }}
        run: nr1 nerdpack:build

      # Validate Ability to publish code (Issue #2)
      # Requires API key
      #- name: NR1 Nerdpack Build
      #  run: nr1 nerdpack:publish --dry-run

      #- name: Publish and deploy Nerdpack
      #  env:
      #    NR1_API_KEY: ${{ secrets.DEMOTRON_V2_API_KEY }}
      #    NR1_REGION: us
      #  run: |
      #    nr1 profiles:add --name workflow --api-key "$NR1_API_KEY" --region "$NR1_REGION" &&
      #    nr1 nerdpack:publish --dry-run

      #        nr1 nerdpack:publish --profile=workflow &&
      #        nr1 nerdpack:deploy --channel="$NR1_DEPLOY_CHANNEL"

      - name: ESLinting
        working-directory: ./${{ SUBMODULE_NAME }}
        run: npm run eslint-check

      - name: Test Code
        working-directory: ./${{ SUBMODULE_NAME }}
        run: npm test
